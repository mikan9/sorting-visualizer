{"version":3,"sources":["SortVisualizer/Visualizer/Bar/Bar.js","SortVisualizer/Visualizer/Visualizer.js","SortVisualizer/AlgorithmSelect/AlgorithmSelect.js","algorithms/SelectionSort.js","algorithms/BubbleSort.js","algorithms/InsertionSort.js","algorithms/MergeSort.js","algorithms/QuickSort.js","algorithms/HeapSort.js","SortVisualizer/Sorter.js","SortVisualizer/SortVisualizer.js","App.js","index.js"],"names":["Bar","props","state","this","id","value","style","calcStyle","data-value","data-originalvalue","className","Component","height","Number","width","WIDTH","Visualizer","generateBars","min","max","length","keepBars","bars","i","random","Math","floor","push","key","map","bar","handleReset","updateBars","minValue","maxValue","setState","AlgorithmSelect","handleClickOutside","e","target","classList","contains","showOptionList","handleDisplay","prevState","handleOptionClick","onAlgorithmSelected","dataset","defaultSelectText","getAttribute","selectedId","bind","optionsList","document","addEventListener","removeEventListener","onClick","option","data-name","name","data-id","a","Array","from","querySelectorAll","forEach","element","remove","getSortStatus","jMin","getElementById","add","j","jVal","jMinVal","setBarState","timer","swap","sortingFinished","n","newN","valA","valB","A","B","copyArray","splitMerge","start","end","middle","ceil","merge","x","k","updateBar","quickSort","type","arr","sub_quicksort","p","partition_lomuto","partition_hoare","Promise","all","pivot","heapify","right","left","largest","ms","sortStatus","Sort","algorithm","speed","setSpeed","selectionSort","bubbleSort","insertionSort","mergeSort","heapSort","res","setTimeout","flag","b","markSorted","temp","firstChild","innerText","isSorting","algorithmId","SortVisualizer","handleChangeMinValue","val","updateVisualizer","handleChangeMaxValue","handleChangeLength","handleChangeSpeed","handleStartSort","originalvalue","handleOpenSettings","body","toggle","handleAlgorithmSelected","len","algorithmList","aria-label","defaultValue","onChange","htmlFor","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5d2d0891.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Bar.css'\r\n\r\nconst WIDTH = 0.5;\r\n\r\nexport default class Bar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        // log(\"-- Bar#\" + this.props.className + \"Mounted --\");\r\n    }\r\n\r\n    render() {\r\n        const { id, value } = this.props;\r\n        const style = calcStyle(value);\r\n\r\n        return (\r\n            <>\r\n                <div id={id} data-value={value} data-originalvalue={value} className=\"bar tooltip\" style={style}>\r\n                    <span className=\"tooltip--text\">\r\n                        {value}\r\n                    </span>\r\n                </div >\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport function calcStyle(value) {\r\n    return {\r\n        height: (1 + Number(value) * WIDTH) + \"rem\",\r\n        width: WIDTH + \"em\"\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Visualizer.css';\r\nimport { log } from '../Logger';\r\nimport Bar from './Bar/Bar';\r\n\r\nexport default class Visualizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bars: []\r\n        };\r\n    }\r\n\r\n    generateBars = (min, max, length, keepBars) => {\r\n        if (keepBars !== true) {\r\n            const bars = [];\r\n            min = Number(min);\r\n            max = Number(max);\r\n            for (let i = 0; i < length; ++i) {\r\n                const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                bars.push(<Bar id={i} key={i} value={random}></Bar>);\r\n            }\r\n            return bars.map((bar) => {\r\n                return bar;\r\n            });\r\n        }\r\n        return this.state.bars.map((bar) => {\r\n            return bar;\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        log(\"--Visualizer Mounted-- | min: \" + this.props.minValue);\r\n        const bars = this.generateBars(this.props.minValue, this.props.maxValue, this.props.length);\r\n        this.setState({ bars: bars });\r\n    }\r\n\r\n    handleReset = () => {\r\n        log(\"--Visualizer.js: handleReset--\");\r\n        this.updateBars(this.props.minValue, this.props.maxValue, this.props.length, false);\r\n    }\r\n\r\n    render() {\r\n        const { minValue, maxValue, length, keepBars } = this.props;\r\n\r\n        return (\r\n            <div className=\"visualizer\">\r\n                {this.generateBars(minValue, maxValue, length, keepBars)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './AlgorithmSelect.css';\r\n\r\nexport default class AlgorithmSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleDisplay = this.handleDisplay.bind(this);\r\n        this.handleOptionClick = this.handleOptionClick.bind(this);\r\n\r\n        this.state = {\r\n            defaultSelectText: \"\",\r\n            showOptionList: false,\r\n            selectedId: 0,\r\n            optionsList: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n        this.setState({\r\n            defaultSelectText: this.props.defaultSelectText\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    handleClickOutside = (e) => {\r\n        if (\r\n            !e.target.classList.contains(\"algorithm-select__option\") &&\r\n            !e.target.classList.contains(\"selected-text\")\r\n        ) {\r\n            this.setState({\r\n                showOptionList: false\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDisplay = () => {\r\n        this.setState(prevState => {\r\n            return { showOptionList: !prevState.showOptionList };\r\n        });\r\n    };\r\n\r\n    handleOptionClick = (e) => {\r\n        this.props.onAlgorithmSelected(e.target.dataset.id);\r\n        this.setState({\r\n            defaultSelectText: e.target.getAttribute(\"data-name\"),\r\n            selectedId: e.target.dataset.id,\r\n            showOptionList: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { optionsList } = this.props;\r\n        const { showOptionList, defaultSelectText, selectedId } = this.state;\r\n        return (\r\n            <div className=\"algoritm-select__container\">\r\n                <div id=\"selected-algorithm\" className={showOptionList ? \"selected-text active\" : \"selected-text\"} onClick={this.handleDisplay} data-value={selectedId}>\r\n                    {defaultSelectText}\r\n                    <div className=\"arrow\"></div>\r\n                </div>\r\n\r\n                <ul className={showOptionList ? \"algorithm-select__list active\" : \"algorithm-select__list\"}>\r\n                    {optionsList.map(option => {\r\n                        return (\r\n                            <li className=\"algorithm-select__option\" data-name={option.name} data-id={option.id} key={option.id} onClick={this.handleOptionClick}>\r\n                                {option.name}\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\nimport { sortingFinished } from \"../SortVisualizer/SortVisualizer\";\r\nimport { log } from '../SortVisualizer/Logger';\r\nimport { timer, swap, setBarState, getSortStatus } from \"../SortVisualizer/Sorter\";\r\n\r\nexport async function selectionSort(length) {\r\n    log(\"Starting Selection Sort.\");\r\n    Array.from(document.querySelectorAll(\"bar\")).forEach(element => {\r\n        element.classList.remove(\"sorted\");\r\n    });\r\n\r\n\r\n    for (let i = 0; i < length - 1 && getSortStatus(); ++i) {\r\n        let jMin = i;\r\n        document.getElementById(jMin).classList.add(\"current-min\");\r\n        for (let j = i + 1; j < length && getSortStatus(); ++j) {\r\n\r\n            let jVal = Number(document.getElementById(j).dataset.value),\r\n                jMinVal = Number(document.getElementById(jMin).dataset.value);\r\n            document.getElementById(j).classList.add(\"current\");\r\n\r\n            if (jVal < jMinVal) {\r\n                setBarState(jMin, \"current-min\", false);\r\n                setBarState(j, \"current-min\", true);\r\n                jMin = j;\r\n            }\r\n\r\n            await timer();\r\n            setBarState(j, \"current\", false);\r\n        }\r\n\r\n        if (jMin !== i) swap(i, jMin, true);\r\n        else if (jMin === i) setBarState(jMin, \"sorted\", true);\r\n\r\n        setBarState(jMin, \"current-min\", false);\r\n    }\r\n\r\n    setBarState(length - 1, \"sorted\", true);\r\n    sortingFinished();\r\n}\r\n","import { sortingFinished } from \"../SortVisualizer/SortVisualizer\";\r\nimport { log } from '../SortVisualizer/Logger';\r\nimport { timer, swap, setBarState } from \"../SortVisualizer/Sorter\";\r\n\r\nexport async function bubbleSort(length) {\r\n    log(\"Starting Bubble Sort.\");\r\n    let n = length;\r\n\r\n    while (n > 1) {\r\n        let newN = 0;\r\n        for (let i = 1; i <= n - 1; ++i) {\r\n            let valA = Number(document.getElementById(i - 1).dataset.value),\r\n                valB = Number(document.getElementById(i).dataset.value);\r\n\r\n            setBarState(i - 1, \"current-min\", true);\r\n            setBarState(i, \"current\", true);\r\n\r\n            if (valA > valB) {\r\n                swap(i - 1, i, false);\r\n                newN = i;\r\n            }\r\n            await timer();\r\n            setBarState(i - 1, \"current-min\", false);\r\n            setBarState(i, \"current\", false);\r\n        }\r\n        n = newN;\r\n    }\r\n    sortingFinished();\r\n}","import { sortingFinished } from \"../SortVisualizer/SortVisualizer\";\r\nimport { log } from '../SortVisualizer/Logger';\r\nimport { timer, swap, setBarState } from \"../SortVisualizer/Sorter\";\r\n\r\nexport async function insertionSort(length) {\r\n    log(\"Starting Insertion Sort.\");\r\n    let i = 1;\r\n\r\n    while (i < length) {\r\n        let j = i;\r\n\r\n        while (j > 0 && Number(document.getElementById(j - 1).dataset.value) > Number(document.getElementById(j).dataset.value)) {\r\n            setBarState(j, \"current\", true);\r\n            setBarState(j, \"sorted\", false);\r\n            swap(j, j - 1, false);\r\n\r\n            await timer();\r\n            setBarState(j, \"current\", false);\r\n            setBarState(j, \"sorted\", true);\r\n\r\n            j--;\r\n        }\r\n        i++;\r\n    }\r\n    sortingFinished();\r\n}","import { sortingFinished } from \"../SortVisualizer/SortVisualizer\";\r\nimport { log } from '../SortVisualizer/Logger';\r\nimport { timer, updateBar, setBarState } from \"../SortVisualizer/Sorter\";\r\n\r\nexport async function mergeSort(length) {\r\n    log(\"Starting Merge Sort.\");\r\n\r\n    let A = Array.from(document.querySelectorAll(\".bar\")).map((e) => { return Number(e.dataset.value) }),\r\n        B = [];\r\n\r\n    copyArray(A, 0, Number(length), B);\r\n    await splitMerge(B, 0, Number(length), A);\r\n\r\n    sortingFinished();\r\n}\r\n\r\nasync function splitMerge(B, start, end, A) {\r\n    if (end - start <= 1) return;\r\n\r\n    let middle = Math.ceil((end + start) / 2);\r\n    await splitMerge(A, start, middle, B);\r\n    await splitMerge(A, middle, end, B);\r\n    await merge(B, start, middle, end, A);\r\n}\r\n\r\nasync function merge(A, start, middle, end, B) {\r\n    let i = start, j = middle;\r\n\r\n    for (let x = start; x < end; ++x) {\r\n        setBarState(x, \"sorted\", true);\r\n    }\r\n\r\n    for (let k = start; k < end; ++k) {\r\n        if (i < middle && (j >= end || A[i] <= A[j])) {\r\n            B[k] = A[i];\r\n            i++;\r\n        }\r\n        else {\r\n            B[k] = A[j];\r\n            j++;\r\n        }\r\n\r\n        updateBar(k, B[k]);\r\n        await timer();\r\n    }\r\n}\r\n\r\nfunction copyArray(A, start, end, B) {\r\n    for (let k = start; k < end; ++k) B[k] = A[k];\r\n}","import { sortingFinished } from \"../SortVisualizer/SortVisualizer\";\r\nimport { log } from '../SortVisualizer/Logger';\r\nimport { timer, swap, setBarState } from \"../SortVisualizer/Sorter\";\r\n\r\nexport async function quickSort(type) {\r\n    log(\"Starting Quicksort.\");\r\n\r\n    let arr = Array.from(document.querySelectorAll(\".bar\"))\r\n        .map((e) => { return Number(e.dataset.value) });\r\n\r\n    await sub_quicksort(arr, 0, arr.length - 1, Number(type));\r\n\r\n    sortingFinished();\r\n}\r\n\r\nasync function sub_quicksort(arr, start, end, type) {\r\n    if (start < end) {\r\n        let p = 0;\r\n        if (type === 0) p = await partition_lomuto(arr, start, end);\r\n        else p = await partition_hoare(arr, start, end);\r\n\r\n        await Promise.all([\r\n            sub_quicksort(arr, start, p - (1 - type), type),\r\n            sub_quicksort(arr, p + 1, end, type)\r\n        ]);\r\n    }\r\n}\r\n\r\nasync function partition_lomuto(arr, start, end) {\r\n    let pivot = arr[end],\r\n        i = start;\r\n\r\n    for (let j = start; j < end; ++j) {\r\n        if (arr[j] < pivot) {\r\n            setBarState(i, \"current\", true);\r\n            setBarState(j, \"current\", true);\r\n            swap(i, j, false, arr)\r\n\r\n            await timer();\r\n            setBarState(i, \"current\", false);\r\n            setBarState(j, \"current\", false);\r\n            i++;\r\n        }\r\n    }\r\n    swap(i, end, false, arr);\r\n\r\n    await timer();\r\n    return i;\r\n}\r\n\r\nasync function partition_hoare(arr, start, end) {\r\n    let pivot = arr[Math.floor((end + start) / 2)],\r\n        i = start - 1,\r\n        j = end + 1;\r\n\r\n    while (true) {\r\n        do i++; while (arr[i] < pivot)\r\n        do j--; while (arr[j] > pivot)\r\n        if (i >= j) return j;\r\n\r\n        setBarState(i, \"current\", true);\r\n        setBarState(j, \"current\", true);\r\n        swap(i, j, false, arr);\r\n        await timer();\r\n\r\n        setBarState(i, \"current\", false);\r\n        setBarState(j, \"current\", false);\r\n    }\r\n}\r\n","import { sortingFinished } from \"../SortVisualizer/SortVisualizer\";\r\nimport { log } from '../SortVisualizer/Logger';\r\nimport { timer, swap, setBarState } from \"../SortVisualizer/Sorter\";\r\n\r\nexport async function heapSort(length) {\r\n    log(\"Starting Heapsort.\");\r\n\r\n    let arr = Array.from(document.querySelectorAll(\".bar\"))\r\n        .map((e) => { return Number(e.dataset.value) });\r\n\r\n    let i = Math.floor(length / 2 - 1),\r\n        k = length - 1;\r\n\r\n    while (i >= 0) {\r\n        setBarState(i, \"current\", true);\r\n        await heapify(arr, length, i);\r\n        setBarState(i, \"current\", false);\r\n        i--;\r\n    }\r\n\r\n    while (k >= 0) {\r\n        setBarState(k, \"current\", true);\r\n        [arr[0], arr[k]] = [arr[k], arr[0]];\r\n        swap(0, k);\r\n        await timer();\r\n        setBarState(k, \"current\", false);\r\n        setBarState(k, \"sorted\", true);\r\n        await heapify(arr, k, 0);\r\n        k--;\r\n    }\r\n\r\n    sortingFinished();\r\n}\r\n\r\nasync function heapify(arr, length, i) {\r\n    let largest = i,\r\n        left = i * 2 + 1,\r\n        right = left + 1;\r\n\r\n    setBarState(largest, \"current\", true);\r\n\r\n    if (left < length && arr[left] > arr[largest]) largest = left;\r\n    if (right < length && arr[right] > arr[largest]) largest = right;\r\n\r\n    if (largest !== i) {\r\n        [arr[i], arr[largest]] = [arr[largest], arr[i]];\r\n        setBarState(i, \"current-min\", true);\r\n        swap(i, largest);\r\n        await timer();\r\n        setBarState(largest, \"current\", false);\r\n        setBarState(i, \"current-min\", false);\r\n        await heapify(arr, length, largest);\r\n    }\r\n    setBarState(largest, \"current\", false);\r\n}\r\n\r\n","import { selectionSort } from '../algorithms/SelectionSort';\r\nimport { bubbleSort } from '../algorithms/BubbleSort';\r\nimport { insertionSort } from '../algorithms/InsertionSort';\r\nimport { calcStyle } from \"../SortVisualizer/Visualizer/Bar/Bar\";\r\nimport { mergeSort } from '../algorithms/MergeSort';\r\nimport { quickSort } from '../algorithms/QuickSort';\r\nimport { heapSort } from '../algorithms/HeapSort';\r\n\r\nconst SPEED_MULTIPLIER = 2;\r\nlet ms = 50;\r\nlet sortStatus = 1; // 0: Stopping 1: Starting\r\n\r\nexport function Sort(algorithm, length, speed) {\r\n    sortStatus = 1;\r\n    setSpeed(speed);\r\n    switch (Number(algorithm)) {\r\n        default:\r\n        case 0: selectionSort(length); break;\r\n        case 1: bubbleSort(length); break;\r\n        case 2: insertionSort(length); break;\r\n        case 3: mergeSort(length); break;\r\n        case 4: quickSort(0); break;\r\n        case 5: quickSort(1); break;\r\n        case 6: heapSort(length); break;\r\n    }\r\n}\r\n\r\nexport function stopSort() {\r\n    sortStatus = 0;\r\n}\r\n\r\nexport function getSortStatus() {\r\n    return sortStatus;\r\n}\r\n\r\nexport function timer() {\r\n    return new Promise(res => setTimeout(res, ms));\r\n}\r\n\r\nexport function setSpeed(speed) {\r\n    ms = (100 * SPEED_MULTIPLIER) - (speed * SPEED_MULTIPLIER);\r\n}\r\n\r\nexport function setBarState(id, state, flag) {\r\n    if (getSortStatus() === 0) return;\r\n    if (flag) document.getElementById(id).classList.add(state);\r\n    else document.getElementById(id).classList.remove(state);\r\n}\r\n\r\nexport function swap(a, b, markSorted = false, arr = []) {\r\n    if (getSortStatus() === 0) return;\r\n    if (markSorted) setBarState(a, \"sorted\", true);\r\n\r\n    if (arr.length > 1) {\r\n        const x = arr[a];\r\n        arr[a] = arr[b];\r\n        arr[b] = x;\r\n    }\r\n\r\n    const temp = document.getElementById(a).dataset.value;\r\n    updateBar(a, document.getElementById(b).dataset.value);\r\n    updateBar(b, temp);\r\n}\r\n\r\nexport function updateBar(id, value) {\r\n    if (getSortStatus() === 0) return;\r\n    document.getElementById(id).dataset.value = value;\r\n    document.getElementById(id).style.height = calcStyle(document.getElementById(id).dataset.value).height;\r\n    document.getElementById(id).firstChild.innerText = value;\r\n}\r\n","import React, { Component } from 'react';\r\nimport './SortVisualizer.css';\r\nimport Visualizer from './Visualizer/Visualizer';\r\nimport AlgorithmSelect from './AlgorithmSelect/AlgorithmSelect';\r\nimport { Sort, setSpeed, stopSort } from './Sorter';\r\nimport { log } from './Logger';\r\nimport { calcStyle } from './Visualizer/Bar/Bar';\r\n\r\nconst MAX_LENGTH = 120;\r\nconst DEFAULT_MIN = 0;\r\nconst DEFAULT_MAX = 75;\r\nconst DEFAULT_SPEED = 50;\r\n\r\nlet isSorting = false;\r\nlet speed = DEFAULT_SPEED;\r\nlet algorithmId = 0;\r\n\r\nexport default class SortVisualizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeMinValue = this.handleChangeMinValue.bind(this);\r\n        this.handleChangeMaxValue = this.handleChangeMaxValue.bind(this);\r\n        this.handleChangeLength = this.handleChangeLength.bind(this);\r\n        this.handleStartSort = this.handleStartSort.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n        this.handleAlgorithmSelected = this.handleAlgorithmSelected.bind(this);\r\n        this.handleOpenSettings = this.handleOpenSettings.bind(this);\r\n\r\n        this.state = {\r\n            minValue: DEFAULT_MIN,\r\n            maxValue: DEFAULT_MAX,\r\n            length: MAX_LENGTH,\r\n            algorithmList: [\r\n                { id: 0, name: \"Selection Sort\" },\r\n                { id: 1, name: \"Bubble Sort\" },\r\n                { id: 2, name: \"Insertion Sort\" },\r\n                { id: 3, name: \"Merge Sort\" },\r\n                { id: 4, name: \"Quicksort (Lomuto)\" },\r\n                { id: 5, name: \"Quicksort (Hoare)\" },\r\n                { id: 6, name: \"Heap Sort\" },\r\n                { id: 7, name: \"Counting Sort [WIP]\" },\r\n                { id: 8, name: \"Radix Sort [WIP]\" },\r\n                { id: 9, name: \"Bucket Sort [WIP]\" }\r\n            ]\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        log(\"--SortVisualizer Mounted--\");\r\n        this.updateVisualizer(DEFAULT_MIN, DEFAULT_MAX, MAX_LENGTH);\r\n    }\r\n\r\n    handleChangeMinValue = (e) => {\r\n        log(\"--SortVisualizer.js: handleChangeMinValue--\");\r\n        const val = e.target.value;\r\n        this.updateVisualizer(val, this.state.maxValue, this.state.length);\r\n    }\r\n\r\n    handleChangeMaxValue = (e) => {\r\n        log(\"--SortVisualizer.js: handleChangeMaxValue--\");\r\n        const val = e.target.value;\r\n        this.updateVisualizer(this.state.minValue, val, this.state.length);\r\n    }\r\n\r\n    handleChangeLength = (e) => {\r\n        log(\"--SortVisualizer.js: handleChangeLength--\");\r\n        const val = e.target.value;\r\n        this.updateVisualizer(this.state.minValue, this.state.maxValue, val);\r\n    }\r\n\r\n    handleChangeSpeed = (e) => {\r\n        log(\"--SortVisualizer.js: handleChangeSpeed--\");\r\n        const val = e.target.value;\r\n        speed = val;\r\n        setSpeed(speed);\r\n        document.getElementById(\"settings--speed\").innerText = val;\r\n    }\r\n\r\n    handleStartSort = () => {\r\n        log(\"--SortVisualizer.js: handleStartSort--\");\r\n        if (isSorting) return;\r\n        isSorting = true;\r\n        Sort(algorithmId, this.state.length, speed);\r\n    }\r\n\r\n    handleReset = () => {\r\n        if (isSorting) {\r\n            stopSort();\r\n        }\r\n        let a = Array.from(document.querySelectorAll(\".bar\"));\r\n        a.forEach(element => {\r\n            element.dataset.value = element.dataset.originalvalue;\r\n            element.className = \"bar tooltip\";\r\n            element.style.height = calcStyle(element.dataset.value).height;\r\n            element.firstChild.innerText = element.dataset.value;\r\n        });\r\n    }\r\n\r\n    handleOpenSettings = () => {\r\n        document.body.classList.toggle(\"settings-open\");\r\n    }\r\n\r\n    handleAlgorithmSelected = (value) => {\r\n        algorithmId = value;\r\n    }\r\n\r\n    updateVisualizer = (min, max, len) => {\r\n        if (isSorting) return;\r\n        this.handleReset();\r\n        this.setState({ minValue: min, maxValue: max, length: len });\r\n    }\r\n\r\n    render() {\r\n        const { minValue, maxValue, length, algorithmList } = this.state;\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <button\r\n                    className=\"settings-toggle\"\r\n                    aria-label=\"toggle settings\"\r\n                    onClick={this.handleOpenSettings}\r\n                >\r\n                    <span className=\"hamburger\"></span>\r\n                </button>\r\n                <div className=\"top\">\r\n                    <div className=\"top__panel\">\r\n                        <div className=\"title\">\r\n                            <h1 className=\"title\">Sorting Algorithm <br /> Visualizer</h1>\r\n                        </div>\r\n                        <div className=\"algorithm\">\r\n                            <span className=\"algorithm--title\">Algorithm: </span>\r\n                            <div className=\"algorithm__select\">\r\n                                <AlgorithmSelect\r\n                                    defaultSelectText={algorithmList[0].name}\r\n                                    optionsList={algorithmList}\r\n                                    onAlgorithmSelected={this.handleAlgorithmSelected}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"settings\">\r\n                            <div className=\"settings--input\">\r\n                                <span className=\"settings--input__title\">Mininum</span>\r\n                                <input\r\n                                    name=\"settings--input_min\"\r\n                                    type=\"range\"\r\n                                    className=\"settings--input__slider settings--input__min\"\r\n                                    min=\"0\"\r\n                                    max=\"75\"\r\n                                    defaultValue=\"0\"\r\n                                    onChange={this.handleChangeMinValue}>\r\n                                </input>\r\n                                <label htmlFor=\"settings--input__min\" className=\"settings--input__label\">{minValue}</label>\r\n                            </div>\r\n                            <div className=\"settings--input\">\r\n                                <span className=\"settings--input__title\">Maximum</span>\r\n                                <input\r\n                                    name=\"settings--input_max\"\r\n                                    type=\"range\"\r\n                                    className=\"settings--input__slider settings--input__max\"\r\n                                    min=\"0\"\r\n                                    max=\"75\"\r\n                                    defaultValue=\"75\"\r\n                                    onChange={this.handleChangeMaxValue}>\r\n                                </input>\r\n                                <label htmlFor=\"settings--input__max\" className=\"settings--input__label\">{maxValue}</label>\r\n                            </div>\r\n                            <div className=\"settings--input\">\r\n                                <span className=\"settings--input__title\">Count</span>\r\n                                <input\r\n                                    name=\"settings--input_count\"\r\n                                    type=\"range\"\r\n                                    className=\"settings--input__slider settings--input__count\"\r\n                                    min=\"3\"\r\n                                    max=\"120\"\r\n                                    defaultValue=\"120\"\r\n                                    onChange={this.handleChangeLength}>\r\n                                </input>\r\n                                <label htmlFor=\"settings--input__count\" className=\"settings--input__label\">{length}</label>\r\n                            </div>\r\n                            <div className=\"settings--input\">\r\n                                <span className=\"settings--input__title\">Speed</span>\r\n                                <input\r\n                                    name=\"settings--input_speed\"\r\n                                    type=\"range\"\r\n                                    className=\"settings--input__slider settings--input__speed\"\r\n                                    min=\"1\"\r\n                                    max=\"100\"\r\n                                    defaultValue=\"50\"\r\n                                    onChange={this.handleChangeSpeed}>\r\n                                </input>\r\n                                <label id=\"settings--speed\" htmlFor=\"settings--input__speed\" className=\"settings--input__label\">{speed}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"controls\">\r\n                        <button className=\"controls__btn\" onClick={this.handleStartSort}>Start</button>\r\n                        <button className=\"controls__btn\" onClick={this.handleReset}>Reset</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"visualizer__container\">\r\n                    <Visualizer id=\"visualizer\" minValue={minValue} maxValue={maxValue} length={length} keepBars=\"false\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport function sortingFinished() {\r\n    isSorting = false;\r\n}","import React from 'react';\nimport './App.css';\nimport SortVisualizer from './SortVisualizer/SortVisualizer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortVisualizer></SortVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}