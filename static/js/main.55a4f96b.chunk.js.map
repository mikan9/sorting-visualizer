{"version":3,"sources":["SortVisualizer/Visualizer/Bar/Bar.js","SortVisualizer/Visualizer/Visualizer.js","SortVisualizer/AlgorithmSelect/AlgorithmSelect.js","algorithms/SelectionSort.js","algorithms/BubbleSort.js","algorithms/InsertionSort.js","algorithms/MergeSort.js","algorithms/QuickSort.js","algorithms/HeapSort.js","SortVisualizer/Sorter.js","SortVisualizer/SortVisualizer.js","App.js","index.js"],"names":["Bar","props","state","this","id","value","style","calcStyle","data-value","data-originalvalue","className","Component","height","Number","width","WIDTH","Visualizer","generateBars","min","max","length","keepBars","bars","i","random","Math","floor","push","key","map","bar","handleReset","console","log","updateBars","minValue","maxValue","setState","AlgorithmSelect","handleClickOutside","e","target","classList","contains","showOptionList","handleDisplay","prevState","handleOptionClick","onAlgorithmSelected","dataset","defaultSelectText","getAttribute","selectedId","bind","optionsList","document","addEventListener","removeEventListener","onClick","option","data-name","name","data-id","a","Array","from","querySelectorAll","forEach","element","remove","getSortStatus","jMin","getElementById","add","j","jVal","jMinVal","setBarState","timer","swap","sortingFinished","n","newN","valA","valB","A","B","copyArray","splitMerge","start","end","middle","ceil","merge","x","k","updateBar","quickSort","type","arr","sub_quicksort","p","partition_lomuto","partition_hoare","Promise","all","pivot","heapify","right","left","largest","ms","sortStatus","Sort","algorithm","speed","setSpeed","selectionSort","bubbleSort","insertionSort","mergeSort","heapSort","res","setTimeout","flag","b","markSorted","temp","firstChild","innerText","isSorting","algorithmId","SortVisualizer","handleChangeMinValue","val","updateVisualizer","handleChangeMaxValue","handleChangeLength","handleChangeSpeed","handleStartSort","originalvalue","handleAlgorithmSelected","len","algorithmList","defaultValue","onChange","htmlFor","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.55a4f96b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Bar.css'\r\n\r\nconst WIDTH = 0.5;\r\n\r\nexport default class Bar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(\"-- Bar#\" + this.props.className + \"Mounted --\");\r\n    }\r\n\r\n    render() {\r\n        const { id, value } = this.props;\r\n        const style = calcStyle(value);\r\n\r\n        return (\r\n            <>\r\n                <div id={id} data-value={value} data-originalvalue={value} className=\"bar tooltip\" style={style}>\r\n                    <span className=\"tooltip--text\">\r\n                        {value}\r\n                    </span>\r\n                </div >\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport function calcStyle(value) {\r\n    return {\r\n        height: (1 + Number(value) * WIDTH) + \"rem\",\r\n        width: WIDTH + \"em\"\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Visualizer.css';\r\nimport Bar from './Bar/Bar';\r\n\r\nexport default class Visualizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bars: []\r\n        };\r\n    }\r\n\r\n    generateBars = (min, max, length, keepBars) => {\r\n        if (keepBars !== true) {\r\n            const bars = [];\r\n            min = Number(min);\r\n            max = Number(max);\r\n            for (let i = 0; i < length; ++i) {\r\n                const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                bars.push(<Bar id={i} key={i} value={random}></Bar>);\r\n            }\r\n            return bars.map((bar) => {\r\n                return bar;\r\n            });\r\n        }\r\n        return this.state.bars.map((bar) => {\r\n            return bar;\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"--Visualizer Mounted-- | min: \" + this.props.minValue);\r\n        const bars = this.generateBars(this.props.minValue, this.props.maxValue, this.props.length);\r\n        this.setState({ bars: bars });\r\n    }\r\n\r\n    handleReset = () => {\r\n        console.log(\"--Visualizer.js: handleReset--\");\r\n        this.updateBars(this.props.minValue, this.props.maxValue, this.props.length, false);\r\n    }\r\n\r\n    render() {\r\n        const { minValue, maxValue, length, keepBars } = this.props;\r\n\r\n        return (\r\n            <div className=\"visualizer\">\r\n                {this.generateBars(minValue, maxValue, length, keepBars)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './AlgorithmSelect.css';\r\n\r\nexport default class AlgorithmSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleDisplay = this.handleDisplay.bind(this);\r\n        this.handleOptionClick = this.handleOptionClick.bind(this);\r\n\r\n        this.state = {\r\n            defaultSelectText: \"\",\r\n            showOptionList: false,\r\n            selectedId: 0,\r\n            optionsList: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n        this.setState({\r\n            defaultSelectText: this.props.defaultSelectText\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    handleClickOutside = (e) => {\r\n        if (\r\n            !e.target.classList.contains(\"algorithm-select__option\") &&\r\n            !e.target.classList.contains(\"selected-text\")\r\n        ) {\r\n            this.setState({\r\n                showOptionList: false\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDisplay = () => {\r\n        this.setState(prevState => {\r\n            return { showOptionList: !prevState.showOptionList };\r\n        });\r\n    };\r\n\r\n    handleOptionClick = (e) => {\r\n        this.props.onAlgorithmSelected(e.target.dataset.id);\r\n        this.setState({\r\n            defaultSelectText: e.target.getAttribute(\"data-name\"),\r\n            selectedId: e.target.dataset.id,\r\n            showOptionList: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { optionsList } = this.props;\r\n        const { showOptionList, defaultSelectText, selectedId } = this.state;\r\n        return (\r\n            <div className=\"algoritm-select__container\">\r\n                <div id=\"selected-algorithm\" className={showOptionList ? \"selected-text active\" : \"selected-text\"} onClick={this.handleDisplay} data-value={selectedId}>\r\n                    {defaultSelectText}\r\n                    <div className=\"arrow\"></div>\r\n                </div>\r\n\r\n                <ul className={showOptionList ? \"algorithm-select__list active\" : \"algorithm-select__list\"}>\r\n                    {optionsList.map(option => {\r\n                        return (\r\n                            <li className=\"algorithm-select__option\" data-name={option.name} data-id={option.id} key={option.id} onClick={this.handleOptionClick}>\r\n                                {option.name}\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\nimport { sortingFinished } from \"../SortVisualizer/SortVisualizer\";\r\nimport { timer, swap, setBarState, getSortStatus } from \"../SortVisualizer/Sorter\";\r\n\r\nexport async function selectionSort(length) {\r\n    console.log(\"Starting Selection Sort.\");\r\n    Array.from(document.querySelectorAll(\"bar\")).forEach(element => {\r\n        element.classList.remove(\"sorted\");\r\n    });\r\n\r\n\r\n    for (let i = 0; i < length - 1 && getSortStatus(); ++i) {\r\n        let jMin = i;\r\n        document.getElementById(jMin).classList.add(\"current-min\");\r\n        for (let j = i + 1; j < length && getSortStatus(); ++j) {\r\n\r\n            let jVal = Number(document.getElementById(j).dataset.value),\r\n                jMinVal = Number(document.getElementById(jMin).dataset.value);\r\n            document.getElementById(j).classList.add(\"current\");\r\n\r\n            if (jVal < jMinVal) {\r\n                setBarState(jMin, \"current-min\", false);\r\n                setBarState(j, \"current-min\", true);\r\n                jMin = j;\r\n            }\r\n\r\n            await timer();\r\n            setBarState(j, \"current\", false);\r\n        }\r\n\r\n        if (jMin !== i) swap(i, jMin, true);\r\n        else if (jMin === i) setBarState(jMin, \"sorted\", true);\r\n\r\n        setBarState(jMin, \"current-min\", false);\r\n    }\r\n\r\n    setBarState(length - 1, \"sorted\", true);\r\n    sortingFinished();\r\n}\r\n","import { sortingFinished } from \"../SortVisualizer/SortVisualizer\";\r\nimport { timer, swap, setBarState } from \"../SortVisualizer/Sorter\";\r\n\r\nexport async function bubbleSort(length) {\r\n    console.log(\"Starting Bubble Sort.\");\r\n    let n = length;\r\n\r\n    while (n > 1) {\r\n        let newN = 0;\r\n        for (let i = 1; i <= n - 1; ++i) {\r\n            let valA = Number(document.getElementById(i - 1).dataset.value),\r\n                valB = Number(document.getElementById(i).dataset.value);\r\n\r\n            setBarState(i - 1, \"current-min\", true);\r\n            setBarState(i, \"current\", true);\r\n\r\n            if (valA > valB) {\r\n                swap(i - 1, i, false);\r\n                newN = i;\r\n            }\r\n            await timer();\r\n            setBarState(i - 1, \"current-min\", false);\r\n            setBarState(i, \"current\", false);\r\n        }\r\n        n = newN;\r\n    }\r\n    sortingFinished();\r\n}","import { sortingFinished } from \"../SortVisualizer/SortVisualizer\";\r\nimport { timer, swap, setBarState } from \"../SortVisualizer/Sorter\";\r\n\r\nexport async function insertionSort(length) {\r\n    console.log(\"Starting Insertion Sort.\");\r\n    let i = 1;\r\n\r\n    while (i < length) {\r\n        let j = i;\r\n\r\n        while (j > 0 && Number(document.getElementById(j - 1).dataset.value) > Number(document.getElementById(j).dataset.value)) {\r\n            setBarState(j, \"current\", true);\r\n            setBarState(j, \"sorted\", false);\r\n            swap(j, j - 1, false);\r\n\r\n            await timer();\r\n            setBarState(j, \"current\", false);\r\n            setBarState(j, \"sorted\", true);\r\n\r\n            j--;\r\n        }\r\n        i++;\r\n    }\r\n    sortingFinished();\r\n}","import { sortingFinished } from \"../SortVisualizer/SortVisualizer\";\r\nimport { timer, updateBar, setBarState } from \"../SortVisualizer/Sorter\";\r\n\r\nexport async function mergeSort(length) {\r\n    console.log(\"Starting Merge Sort.\");\r\n\r\n    let A = Array.from(document.querySelectorAll(\".bar\")).map((e) => { return Number(e.dataset.value) }),\r\n        B = [];\r\n\r\n    copyArray(A, 0, Number(length), B);\r\n    await splitMerge(B, 0, Number(length), A);\r\n\r\n    sortingFinished();\r\n}\r\n\r\nasync function splitMerge(B, start, end, A) {\r\n    if (end - start <= 1) return;\r\n\r\n    let middle = Math.ceil((end + start) / 2);\r\n    await splitMerge(A, start, middle, B);\r\n    await splitMerge(A, middle, end, B);\r\n    await merge(B, start, middle, end, A);\r\n}\r\n\r\nasync function merge(A, start, middle, end, B) {\r\n    let i = start, j = middle;\r\n\r\n    for (let x = start; x < end; ++x) {\r\n        setBarState(x, \"sorted\", true);\r\n    }\r\n\r\n    for (let k = start; k < end; ++k) {\r\n        if (i < middle && (j >= end || A[i] <= A[j])) {\r\n            B[k] = A[i];\r\n            i++;\r\n        }\r\n        else {\r\n            B[k] = A[j];\r\n            j++;\r\n        }\r\n\r\n        updateBar(k, B[k]);\r\n        await timer();\r\n    }\r\n}\r\n\r\nfunction copyArray(A, start, end, B) {\r\n    for (let k = start; k < end; ++k) B[k] = A[k];\r\n}","import { sortingFinished } from \"../SortVisualizer/SortVisualizer\";\r\nimport { timer, swap, setBarState } from \"../SortVisualizer/Sorter\";\r\n\r\nexport async function quickSort(type) {\r\n    console.log(\"Starting Quicksort.\");\r\n\r\n    let arr = Array.from(document.querySelectorAll(\".bar\"))\r\n        .map((e) => { return Number(e.dataset.value) });\r\n\r\n    await sub_quicksort(arr, 0, arr.length - 1, Number(type));\r\n\r\n    sortingFinished();\r\n}\r\n\r\nasync function sub_quicksort(arr, start, end, type) {\r\n    if (start < end) {\r\n        let p = 0;\r\n        if (type === 0) p = await partition_lomuto(arr, start, end);\r\n        else p = await partition_hoare(arr, start, end);\r\n\r\n        await Promise.all([\r\n            sub_quicksort(arr, start, p - (1 - type), type),\r\n            sub_quicksort(arr, p + 1, end, type)\r\n        ]);\r\n    }\r\n}\r\n\r\nasync function partition_lomuto(arr, start, end) {\r\n    let pivot = arr[end],\r\n        i = start;\r\n\r\n    for (let j = start; j < end; ++j) {\r\n        if (arr[j] < pivot) {\r\n            setBarState(i, \"current\", true);\r\n            setBarState(j, \"current\", true);\r\n            swap(i, j, false, arr)\r\n\r\n            await timer();\r\n            setBarState(i, \"current\", false);\r\n            setBarState(j, \"current\", false);\r\n            i++;\r\n        }\r\n    }\r\n    swap(i, end, false, arr);\r\n\r\n    await timer();\r\n    return i;\r\n}\r\n\r\nasync function partition_hoare(arr, start, end) {\r\n    let pivot = arr[Math.floor((end + start) / 2)],\r\n        i = start - 1,\r\n        j = end + 1;\r\n\r\n    while (true) {\r\n        do i++; while (arr[i] < pivot)\r\n        do j--; while (arr[j] > pivot)\r\n        if (i >= j) return j;\r\n\r\n        setBarState(i, \"current\", true);\r\n        setBarState(j, \"current\", true);\r\n        swap(i, j, false, arr);\r\n        await timer();\r\n\r\n        setBarState(i, \"current\", false);\r\n        setBarState(j, \"current\", false);\r\n    }\r\n}\r\n","import { sortingFinished } from \"../SortVisualizer/SortVisualizer\";\r\nimport { timer, swap, setBarState } from \"../SortVisualizer/Sorter\";\r\n\r\nexport async function heapSort(length) {\r\n    console.log(\"Starting Heapsort.\");\r\n\r\n    let arr = Array.from(document.querySelectorAll(\".bar\"))\r\n        .map((e) => { return Number(e.dataset.value) });\r\n\r\n    let i = Math.floor(length / 2 - 1),\r\n        k = length - 1;\r\n\r\n    while (i >= 0) {\r\n        setBarState(i, \"current\", true);\r\n        await heapify(arr, length, i);\r\n        setBarState(i, \"current\", false);\r\n        i--;\r\n    }\r\n\r\n    while (k >= 0) {\r\n        setBarState(k, \"current\", true);\r\n        [arr[0], arr[k]] = [arr[k], arr[0]];\r\n        swap(0, k);\r\n        await timer();\r\n        setBarState(k, \"current\", false);\r\n        setBarState(k, \"sorted\", true);\r\n        await heapify(arr, k, 0);\r\n        k--;\r\n    }\r\n\r\n    sortingFinished();\r\n}\r\n\r\nasync function heapify(arr, length, i) {\r\n    let largest = i,\r\n        left = i * 2 + 1,\r\n        right = left + 1;\r\n\r\n    setBarState(largest, \"current\", true);\r\n\r\n    if (left < length && arr[left] > arr[largest]) largest = left;\r\n    if (right < length && arr[right] > arr[largest]) largest = right;\r\n\r\n    if (largest !== i) {\r\n        [arr[i], arr[largest]] = [arr[largest], arr[i]];\r\n        setBarState(i, \"current-min\", true);\r\n        swap(i, largest);\r\n        await timer();\r\n        setBarState(largest, \"current\", false);\r\n        setBarState(i, \"current-min\", false);\r\n        await heapify(arr, length, largest);\r\n    }\r\n    setBarState(largest, \"current\", false);\r\n}\r\n\r\n","import { selectionSort } from '../algorithms/SelectionSort';\r\nimport { bubbleSort } from '../algorithms/BubbleSort';\r\nimport { insertionSort } from '../algorithms/InsertionSort';\r\nimport { calcStyle } from \"../SortVisualizer/Visualizer/Bar/Bar\";\r\nimport { mergeSort } from '../algorithms/MergeSort';\r\nimport { quickSort } from '../algorithms/QuickSort';\r\nimport { heapSort } from '../algorithms/HeapSort';\r\n\r\nconst SPEED_MULTIPLIER = 2;\r\nlet ms = 50;\r\nlet sortStatus = 1; // 0: Stopping 1: Starting\r\n\r\nexport function Sort(algorithm, length, speed) {\r\n    sortStatus = 1;\r\n    setSpeed(speed);\r\n    switch (Number(algorithm)) {\r\n        default:\r\n        case 0: selectionSort(length); break;\r\n        case 1: bubbleSort(length); break;\r\n        case 2: insertionSort(length); break;\r\n        case 3: mergeSort(length); break;\r\n        case 4: quickSort(0); break;\r\n        case 5: quickSort(1); break;\r\n        case 6: heapSort(length); break;\r\n    }\r\n}\r\n\r\nexport function stopSort() {\r\n    sortStatus = 0;\r\n}\r\n\r\nexport function getSortStatus() {\r\n    return sortStatus;\r\n}\r\n\r\nexport function timer() {\r\n    return new Promise(res => setTimeout(res, ms));\r\n}\r\n\r\nexport function setSpeed(speed) {\r\n    ms = (100 * SPEED_MULTIPLIER) - (speed * SPEED_MULTIPLIER);\r\n}\r\n\r\nexport function setBarState(id, state, flag) {\r\n    if (getSortStatus() === 0) return;\r\n    if (flag) document.getElementById(id).classList.add(state);\r\n    else document.getElementById(id).classList.remove(state);\r\n}\r\n\r\nexport function swap(a, b, markSorted = false, arr = []) {\r\n    if (getSortStatus() === 0) return;\r\n    if (markSorted) setBarState(a, \"sorted\", true);\r\n\r\n    if (arr.length > 1) {\r\n        const x = arr[a];\r\n        arr[a] = arr[b];\r\n        arr[b] = x;\r\n    }\r\n\r\n    const temp = document.getElementById(a).dataset.value;\r\n    updateBar(a, document.getElementById(b).dataset.value);\r\n    updateBar(b, temp);\r\n}\r\n\r\nexport function updateBar(id, value) {\r\n    if (getSortStatus() === 0) return;\r\n    document.getElementById(id).dataset.value = value;\r\n    document.getElementById(id).style.height = calcStyle(document.getElementById(id).dataset.value).height;\r\n    document.getElementById(id).firstChild.innerText = value;\r\n}\r\n","import React, { Component } from 'react';\r\nimport './SortVisualizer.css';\r\nimport Visualizer from './Visualizer/Visualizer';\r\nimport AlgorithmSelect from './AlgorithmSelect/AlgorithmSelect';\r\nimport { Sort, setSpeed, stopSort } from './Sorter';\r\nimport { calcStyle } from './Visualizer/Bar/Bar';\r\n\r\nconst MAX_LENGTH = 120;\r\nconst DEFAULT_MIN = 0;\r\nconst DEFAULT_MAX = 75;\r\nconst DEFAULT_SPEED = 50;\r\n\r\nlet isSorting = false;\r\nlet speed = DEFAULT_SPEED;\r\nlet algorithmId = 0;\r\n\r\nexport default class SortVisualizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeMinValue = this.handleChangeMinValue.bind(this);\r\n        this.handleChangeMaxValue = this.handleChangeMaxValue.bind(this);\r\n        this.handleChangeLength = this.handleChangeLength.bind(this);\r\n        this.handleStartSort = this.handleStartSort.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n        this.handleAlgorithmSelected = this.handleAlgorithmSelected.bind(this);\r\n\r\n        this.state = {\r\n            minValue: DEFAULT_MIN,\r\n            maxValue: DEFAULT_MAX,\r\n            length: MAX_LENGTH,\r\n            algorithmList: [\r\n                { id: 0, name: \"Selection Sort\" },\r\n                { id: 1, name: \"Bubble Sort\" },\r\n                { id: 2, name: \"Insertion Sort\" },\r\n                { id: 3, name: \"Merge Sort\" },\r\n                { id: 4, name: \"Quicksort (Lomuto)\" },\r\n                { id: 5, name: \"Quicksort (Hoare)\" },\r\n                { id: 6, name: \"Heap Sort\" },\r\n                { id: 7, name: \"Counting Sort [WIP]\" },\r\n                { id: 8, name: \"Radix Sort [WIP]\" },\r\n                { id: 9, name: \"Bucket Sort [WIP]\" }\r\n            ]\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"--SortVisualizer Mounted--\");\r\n        this.updateVisualizer(DEFAULT_MIN, DEFAULT_MAX, MAX_LENGTH);\r\n    }\r\n\r\n    handleChangeMinValue = (e) => {\r\n        console.log(\"--SortVisualizer.js: handleChangeMinValue--\");\r\n        const val = e.target.value;\r\n        this.updateVisualizer(val, this.state.maxValue, this.state.length);\r\n    }\r\n\r\n    handleChangeMaxValue = (e) => {\r\n        console.log(\"--SortVisualizer.js: handleChangeMaxValue--\");\r\n        const val = e.target.value;\r\n        this.updateVisualizer(this.state.minValue, val, this.state.length);\r\n    }\r\n\r\n    handleChangeLength = (e) => {\r\n        console.log(\"--SortVisualizer.js: handleChangeLength--\");\r\n        const val = e.target.value;\r\n        this.updateVisualizer(this.state.minValue, this.state.maxValue, val);\r\n    }\r\n\r\n    handleChangeSpeed = (e) => {\r\n        console.log(\"--SortVisualizer.js: handleChangeSpeed--\");\r\n        const val = e.target.value;\r\n        speed = val;\r\n        setSpeed(speed);\r\n        document.getElementById(\"settings--speed\").innerText = val;\r\n    }\r\n\r\n    handleStartSort = () => {\r\n        console.log(\"--SortVisualizer.js: handleStartSort--\");\r\n        if (isSorting) return;\r\n        isSorting = true;\r\n        Sort(algorithmId, this.state.length, speed);\r\n    }\r\n\r\n    handleReset = () => {\r\n        if (isSorting) {\r\n            stopSort();\r\n        }\r\n        let a = Array.from(document.querySelectorAll(\".bar\"));\r\n        a.forEach(element => {\r\n            element.dataset.value = element.dataset.originalvalue;\r\n            element.className = \"bar tooltip\";\r\n            element.style.height = calcStyle(element.dataset.value).height;\r\n            element.firstChild.innerText = element.dataset.value;\r\n        });\r\n    }\r\n\r\n    handleAlgorithmSelected = (value) => {\r\n        algorithmId = value;\r\n    }\r\n\r\n    updateVisualizer = (min, max, len) => {\r\n        if (isSorting) return;\r\n        this.handleReset();\r\n        this.setState({ minValue: min, maxValue: max, length: len });\r\n    }\r\n\r\n    render() {\r\n        const { minValue, maxValue, length, algorithmList } = this.state;\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <div className=\"top\">\r\n                    <div className=\"title\">\r\n                        <h1 className=\"title\">Sorting Algorithm <br /> Visualizer</h1>\r\n                    </div>\r\n                    <div className=\"algorithm\">\r\n                        <span className=\"algorithm--title\">Algorithm: </span>\r\n                        <div className=\"algorithm__select\">\r\n                            <AlgorithmSelect\r\n                                defaultSelectText={algorithmList[0].name}\r\n                                optionsList={algorithmList}\r\n                                onAlgorithmSelected={this.handleAlgorithmSelected}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"settings\">\r\n                        <div className=\"settings--input\">\r\n                            <span className=\"settings--input__title\">Mininum</span>\r\n                            <input\r\n                                name=\"settings--input_min\"\r\n                                type=\"range\"\r\n                                className=\"settings--input__slider settings--input__min\"\r\n                                min=\"0\"\r\n                                max=\"75\"\r\n                                defaultValue=\"0\"\r\n                                onChange={this.handleChangeMinValue}>\r\n                            </input>\r\n                            <label htmlFor=\"settings--input__min\" className=\"settings--input__label\">{minValue}</label>\r\n                        </div>\r\n                        <div className=\"settings--input\">\r\n                            <span className=\"settings--input__title\">Maximum</span>\r\n                            <input\r\n                                name=\"settings--input_max\"\r\n                                type=\"range\"\r\n                                className=\"settings--input__slider settings--input__max\"\r\n                                min=\"0\"\r\n                                max=\"75\"\r\n                                defaultValue=\"75\"\r\n                                onChange={this.handleChangeMaxValue}>\r\n                            </input>\r\n                            <label htmlFor=\"settings--input__max\" className=\"settings--input__label\">{maxValue}</label>\r\n                        </div>\r\n                        <div className=\"settings--input\">\r\n                            <span className=\"settings--input__title\">Count</span>\r\n                            <input\r\n                                name=\"settings--input_count\"\r\n                                type=\"range\"\r\n                                className=\"settings--input__slider settings--input__count\"\r\n                                min=\"3\"\r\n                                max=\"120\"\r\n                                defaultValue=\"120\"\r\n                                onChange={this.handleChangeLength}>\r\n                            </input>\r\n                            <label htmlFor=\"settings--input__count\" className=\"settings--input__label\">{length}</label>\r\n                        </div>\r\n                        <div className=\"settings--input\">\r\n                            <span className=\"settings--input__title\">Speed</span>\r\n                            <input\r\n                                name=\"settings--input_speed\"\r\n                                type=\"range\"\r\n                                className=\"settings--input__slider settings--input__speed\"\r\n                                min=\"1\"\r\n                                max=\"100\"\r\n                                defaultValue=\"50\"\r\n                                onChange={this.handleChangeSpeed}>\r\n                            </input>\r\n                            <label id=\"settings--speed\" htmlFor=\"settings--input__speed\" className=\"settings--input__label\">{speed}</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"nav\">\r\n                        <button className=\"nav__btn\" onClick={this.handleStartSort}>Start</button>\r\n                        <button className=\"nav__btn\" onClick={this.handleReset}>Reset</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"body\">\r\n                    <Visualizer id=\"visualizer\" minValue={minValue} maxValue={maxValue} length={length} keepBars=\"false\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport function sortingFinished() {\r\n    isSorting = false;\r\n}","import React from 'react';\nimport './App.css';\nimport SortVisualizer from './SortVisualizer/SortVisualizer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortVisualizer></SortVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}